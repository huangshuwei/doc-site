(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d23118b"],{eea6:function(e,n,l){"use strict";l.r(n);var t=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("div",[l("div",[l("anchor",{attrs:{label:"单选功能"}}),l("checkbox-single")],1),l("div",[l("anchor",{attrs:{label:"多选功能普通用法"}}),l("checkbox-multiple-simple")],1),l("div",[l("anchor",{attrs:{label:"多选功能高级用法"}}),l("checkbox-multiple-advanced")],1),l("API")],1)},c=[],a=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("section",{staticClass:"content example-md-doc"},[l("demo-block",[l("div",[l("p",[e._v("单选功能")])]),l("template",{slot:"source"},[l("element-demo0")],1),l("template",{slot:"highlight"},[l("pre",{pre:!0},[l("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <div>\n      <div class="bold">单选</div>\n      <ve-checkbox\n        @on-checked-change="checkedChange"\n        v-model="checkboxValue1"\n        label="哈密瓜"\n      />\n      <div>{{checkboxValue1}}</div>\n    </div>\n\n    <div>\n      <div class="bold">\n        单选禁用\n      </div>\n      <ve-checkbox disabled v-model="checkboxValue2">哈密瓜</ve-checkbox>\n      <div>{{checkboxValue2}}</div>\n\n      <ve-checkbox disabled v-model="checkboxValue3">哈密瓜</ve-checkbox>\n      <div>{{checkboxValue3}}</div>\n    </div>\n\n    <div>\n      <div class="bold">\n        半选状态\n      </div>\n      <ve-checkbox indeterminate>哈密瓜</ve-checkbox>\n    </div>\n\n    <div>\n      <div class="bold">\n        受控属性\n      </div>\n      <ve-checkbox\n        isControlled\n        :isSelected="isSelected"\n        @on-checked-change="checkedChangeControl"\n        >哈密瓜</ve-checkbox\n      >\n      <div>{{isSelected}}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        checkboxValue1: true,\n        checkboxValue2: false,\n        checkboxValue3: true,\n        isSelected: true,\n      };\n    },\n    methods: {\n      checkedChange(isChecked) {\n        console.log("isChecked::", isChecked);\n      },\n      checkedChangeControl(isChecked) {\n        this.isSelected = isChecked;\n      },\n    },\n  };\n<\/script>\n')])])])],2)],1)},o=[];function i(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),l.push.apply(l,t)}return l}function r(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?i(Object(l),!0).forEach((function(n){d(e,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))}))}return e}function d(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}var h={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("div",[[l("div",[l("div",[l("div",{staticClass:"bold"},[e._v("单选")]),e._v(" "),l("ve-checkbox",{attrs:{label:"哈密瓜"},on:{"on-checked-change":e.checkedChange},model:{value:e.checkboxValue1,callback:function(n){e.checkboxValue1=n},expression:"checkboxValue1"}}),e._v(" "),l("div",[e._v(e._s(e.checkboxValue1))])],1),e._v(" "),l("div",[l("div",{staticClass:"bold"},[e._v("\n        单选禁用\n      ")]),e._v(" "),l("ve-checkbox",{attrs:{disabled:""},model:{value:e.checkboxValue2,callback:function(n){e.checkboxValue2=n},expression:"checkboxValue2"}},[e._v("哈密瓜")]),e._v(" "),l("div",[e._v(e._s(e.checkboxValue2))]),e._v(" "),l("ve-checkbox",{attrs:{disabled:""},model:{value:e.checkboxValue3,callback:function(n){e.checkboxValue3=n},expression:"checkboxValue3"}},[e._v("哈密瓜")]),e._v(" "),l("div",[e._v(e._s(e.checkboxValue3))])],1),e._v(" "),l("div",[l("div",{staticClass:"bold"},[e._v("\n        半选状态\n      ")]),e._v(" "),l("ve-checkbox",{attrs:{indeterminate:""}},[e._v("哈密瓜")])],1),e._v(" "),l("div",[l("div",{staticClass:"bold"},[e._v("\n        受控属性\n      ")]),e._v(" "),l("ve-checkbox",{attrs:{isControlled:"",isSelected:e.isSelected},on:{"on-checked-change":e.checkedChangeControl}},[e._v("哈密瓜")]),e._v(" "),l("div",[e._v(e._s(e.isSelected))])],1)])]],2)},n=[],l={data:function(){return{checkboxValue1:!0,checkboxValue2:!1,checkboxValue3:!0,isSelected:!0}},methods:{checkedChange:function(e){console.log("isChecked::",e)},checkedChangeControl:function(e){this.isSelected=e}}};return r({render:e,staticRenderFns:n},l)}()}},s=h,u=l("2877"),b=Object(u["a"])(s,a,o,!1,null,null,null),k=b.exports,v=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("section",{staticClass:"content example-md-doc"},[l("demo-block",[l("div",[l("p",[e._v("多选功能")])]),l("template",{slot:"source"},[l("element-demo0")],1),l("template",{slot:"highlight"},[l("pre",{pre:!0},[l("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <div>\n      <div class="bold">多选</div>\n      <ve-checkbox-group v-model="checkboxGroupDefaultValue1">\n        <ve-checkbox label="南瓜" />\n        <ve-checkbox disabled label="西红柿" />\n        <ve-checkbox label="哈密瓜" />\n        <ve-checkbox label="水蜜桃" />\n      </ve-checkbox-group>\n      [{{checkboxGroupDefaultValue1.join()}}]\n    </div>\n    <div>\n      <div class="bold">全选</div>\n\n      <div>\n        <ve-checkbox\n          @on-checked-change="handleCheckAll"\n          :indeterminate="indeterminate"\n          v-model="checkedAllModel"\n          label="全选"\n        />\n        <br /><br />\n      </div>\n\n      <ve-checkbox-group\n        v-model="checkboxGroupDefaultValue2"\n        @on-checked-change="handleCheckGroupChange"\n      >\n        <ve-checkbox\n          @on-checked-change="checkedChange"\n          v-for="(item,index) in checkboxGroupInitValues"\n          :disabled="item.disabled"\n          :label="item.label"\n          :key="index"\n        ></ve-checkbox>\n      </ve-checkbox-group>\n      <br />\n      [{{checkboxGroupDefaultValue2.join()}}]\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        checkboxGroupDefaultValue1: ["西红柿", "哈密瓜"],\n\n        checkboxGroupInitValues: [\n          { disabled: false, label: "南瓜" },\n          { disabled: false, label: "西红柿" },\n          { disabled: false, label: "哈密瓜" },\n          { disabled: false, label: "水蜜桃" },\n        ],\n\n        checkboxGroupDefaultValue2: ["南瓜", "哈密瓜", "水蜜桃"],\n\n        indeterminate: true,\n        checkedAllModel: false,\n      };\n    },\n\n    computed: {\n      // 是否全部选中\n      hasAllChecked() {\n        return this.checkboxGroupInitValues.every((x) => {\n          return this.checkboxGroupDefaultValue2.indexOf(x.label) > -1;\n        });\n      },\n\n      // 判断是否有部分选中\n      hasPartChecked() {\n        return this.checkboxGroupInitValues.some((x) => {\n          return this.checkboxGroupDefaultValue2.indexOf(x.label) > -1;\n        });\n      },\n    },\n\n    methods: {\n      // 全选\n      checkAll() {\n        let all = this.checkboxGroupInitValues.map((item) => {\n          return item.label;\n        });\n\n        this.checkboxGroupDefaultValue2 = all;\n      },\n\n      unCheckAll() {\n        this.checkboxGroupDefaultValue2 = [];\n      },\n\n      handleCheckAll() {\n        if (this.checkedAllModel) {\n          this.checkAll();\n        } else {\n          this.unCheckAll();\n        }\n\n        this.indeterminate = false;\n      },\n\n      // checkbox-group change\n      handleCheckGroupChange(val) {\n        console.log("checkgroupChange1::", val);\n\n        if (this.hasAllChecked) {\n          this.checkedAllModel = true;\n          this.indeterminate = false;\n        } else if (this.hasPartChecked) {\n          this.indeterminate = true;\n        } else {\n          this.indeterminate = false;\n          this.checkedAllModel = false;\n        }\n      },\n\n      checkedChange(val) {\n        console.log("checkedChange1::", val);\n      },\n    },\n  };\n<\/script>\n')])])])],2)],1)},p=[];function f(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),l.push.apply(l,t)}return l}function x(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?f(Object(l),!0).forEach((function(n){m(e,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):f(Object(l)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))}))}return e}function m(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}var _={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("div",[[l("div",[l("div",[l("div",{staticClass:"bold"},[e._v("多选")]),e._v(" "),l("ve-checkbox-group",{model:{value:e.checkboxGroupDefaultValue1,callback:function(n){e.checkboxGroupDefaultValue1=n},expression:"checkboxGroupDefaultValue1"}},[l("ve-checkbox",{attrs:{label:"南瓜"}}),e._v(" "),l("ve-checkbox",{attrs:{disabled:"",label:"西红柿"}}),e._v(" "),l("ve-checkbox",{attrs:{label:"哈密瓜"}}),e._v(" "),l("ve-checkbox",{attrs:{label:"水蜜桃"}})],1),e._v("\n      ["+e._s(e.checkboxGroupDefaultValue1.join())+"]\n    ")],1),e._v(" "),l("div",[l("div",{staticClass:"bold"},[e._v("全选")]),e._v(" "),l("div",[l("ve-checkbox",{attrs:{indeterminate:e.indeterminate,label:"全选"},on:{"on-checked-change":e.handleCheckAll},model:{value:e.checkedAllModel,callback:function(n){e.checkedAllModel=n},expression:"checkedAllModel"}}),e._v(" "),l("br"),l("br")],1),e._v(" "),l("ve-checkbox-group",{on:{"on-checked-change":e.handleCheckGroupChange},model:{value:e.checkboxGroupDefaultValue2,callback:function(n){e.checkboxGroupDefaultValue2=n},expression:"checkboxGroupDefaultValue2"}},e._l(e.checkboxGroupInitValues,(function(n,t){return l("ve-checkbox",{key:t,attrs:{disabled:n.disabled,label:n.label},on:{"on-checked-change":e.checkedChange}})})),1),e._v(" "),l("br"),e._v("\n      ["+e._s(e.checkboxGroupDefaultValue2.join())+"]\n    ")],1)])]],2)},n=[],l={data:function(){return{checkboxGroupDefaultValue1:["西红柿","哈密瓜"],checkboxGroupInitValues:[{disabled:!1,label:"南瓜"},{disabled:!1,label:"西红柿"},{disabled:!1,label:"哈密瓜"},{disabled:!1,label:"水蜜桃"}],checkboxGroupDefaultValue2:["南瓜","哈密瓜","水蜜桃"],indeterminate:!0,checkedAllModel:!1}},computed:{hasAllChecked:function(){var e=this;return this.checkboxGroupInitValues.every((function(n){return e.checkboxGroupDefaultValue2.indexOf(n.label)>-1}))},hasPartChecked:function(){var e=this;return this.checkboxGroupInitValues.some((function(n){return e.checkboxGroupDefaultValue2.indexOf(n.label)>-1}))}},methods:{checkAll:function(){var e=this.checkboxGroupInitValues.map((function(e){return e.label}));this.checkboxGroupDefaultValue2=e},unCheckAll:function(){this.checkboxGroupDefaultValue2=[]},handleCheckAll:function(){this.checkedAllModel?this.checkAll():this.unCheckAll(),this.indeterminate=!1},handleCheckGroupChange:function(e){console.log("checkgroupChange1::",e),this.hasAllChecked?(this.checkedAllModel=!0,this.indeterminate=!1):this.hasPartChecked?this.indeterminate=!0:(this.indeterminate=!1,this.checkedAllModel=!1)},checkedChange:function(e){console.log("checkedChange1::",e)}}};return x({render:e,staticRenderFns:n},l)}()}},C=_,g=Object(u["a"])(C,v,p,!1,null,null,null),V=g.exports,G=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("section",{staticClass:"content example-md-doc"},[l("demo-block",[l("div",[l("p",[e._v("禁用情况下的全选")])]),l("template",{slot:"source"},[l("element-demo0")],1),l("template",{slot:"highlight"},[l("pre",{pre:!0},[l("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n  <div>\n    <div>\n      <div class="bold">全选</div>\n\n      <div>\n        <ve-checkbox\n          @on-checked-change="handleCheckAll"\n          :indeterminate="indeterminate"\n          v-model="checkedAllModel"\n          label="全选"\n        ></ve-checkbox>\n        <br /><br />\n      </div>\n\n      <ve-checkbox-group\n        v-model="checkboxGroupDefaultValue"\n        @on-checked-change="handleCheckGroupChange"\n      >\n        <ve-checkbox\n          v-for="(item,index) in checkboxGroupInitValues"\n          :disabled="item.disabled"\n          :label="item.label"\n          :key="index"\n        ></ve-checkbox>\n      </ve-checkbox-group>\n      <br />\n      [{{checkboxGroupDefaultValue.join()}}]\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        checkboxGroupInitValues: [\n          { disabled: false, label: "南瓜" },\n          { disabled: true, label: "西红柿" },\n          { disabled: false, label: "哈密瓜" },\n          { disabled: false, label: "水蜜桃" },\n          { disabled: true, label: "哈密瓜2" },\n          { disabled: false, label: "水蜜桃2" },\n        ],\n\n        checkboxGroupDefaultValue: ["南瓜", "哈密瓜", "水蜜桃", "哈密瓜2"],\n\n        indeterminate: true,\n        checkedAllModel: false,\n      };\n    },\n\n    computed: {\n      // 是否全部选中\n      hasAllChecked() {\n        return this.checkboxGroupInitValues.every((x) => {\n          return this.checkboxGroupDefaultValue.indexOf(x.label) > -1;\n        });\n      },\n\n      // 判断是否有部分选中\n      hasPartChecked() {\n        return this.checkboxGroupInitValues.some((x) => {\n          return this.checkboxGroupDefaultValue.indexOf(x.label) > -1;\n        });\n      },\n\n      // 禁用已选中的复选框\n      disabledChecked() {\n        let result = [];\n\n        this.checkboxGroupInitValues.filter((x) => {\n          if (\n            x.disabled &&\n            this.checkboxGroupDefaultValue.indexOf(x.label) > -1\n          ) {\n            result.push(x.label);\n          }\n        });\n        return result;\n      },\n\n      // 禁用未选中的复选框集合\n      disabledUnChecked() {\n        let result = [];\n\n        this.checkboxGroupInitValues.filter((x) => {\n          if (\n            x.disabled &&\n            this.checkboxGroupDefaultValue.indexOf(x.label) === -1\n          ) {\n            result.push(x.label);\n          }\n        });\n        return result;\n      },\n    },\n\n    methods: {\n      // 全选\n      checkAll() {\n        let all = this.checkboxGroupInitValues.map((item) => {\n          return item.label;\n        });\n\n        // 排除禁用不选中的\n        if (this.disabledUnChecked.length > 0) {\n          all = all.filter((x) => {\n            return this.disabledUnChecked.indexOf(x) === -1;\n          });\n          this.indeterminate = true;\n          this.checkedAllModel = false;\n        } else {\n          this.indeterminate = false;\n          this.checkedAllModel = true;\n        }\n\n        this.checkboxGroupDefaultValue = all;\n      },\n\n      unCheckAll() {\n        this.checkboxGroupDefaultValue = this.disabledChecked;\n\n        if (this.disabledChecked.length > 0) {\n          this.indeterminate = true;\n        } else {\n          this.indeterminate = false;\n        }\n\n        this.checkedAllModel = false;\n      },\n\n      handleCheckAll() {\n        if (this.checkedAllModel) {\n          this.checkAll();\n        } else {\n          this.unCheckAll();\n        }\n      },\n\n      // checkbox-group change\n      handleCheckGroupChange() {\n        console.log(1111);\n        if (this.hasAllChecked) {\n          this.checkedAllModel = true;\n          this.indeterminate = false;\n        } else if (this.hasPartChecked) {\n          this.indeterminate = true;\n        } else {\n          this.indeterminate = false;\n          this.checkedAllModel = false;\n        }\n      },\n    },\n  };\n<\/script>\n')])])])],2)],1)},O=[];function A(e,n){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),l.push.apply(l,t)}return l}function D(e){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?A(Object(l),!0).forEach((function(n){j(e,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):A(Object(l)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(l,n))}))}return e}function j(e,n,l){return n in e?Object.defineProperty(e,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[n]=l,e}var y={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("div",[[l("div",[l("div",[l("div",{staticClass:"bold"},[e._v("全选")]),e._v(" "),l("div",[l("ve-checkbox",{attrs:{indeterminate:e.indeterminate,label:"全选"},on:{"on-checked-change":e.handleCheckAll},model:{value:e.checkedAllModel,callback:function(n){e.checkedAllModel=n},expression:"checkedAllModel"}}),e._v(" "),l("br"),l("br")],1),e._v(" "),l("ve-checkbox-group",{on:{"on-checked-change":e.handleCheckGroupChange},model:{value:e.checkboxGroupDefaultValue,callback:function(n){e.checkboxGroupDefaultValue=n},expression:"checkboxGroupDefaultValue"}},e._l(e.checkboxGroupInitValues,(function(e,n){return l("ve-checkbox",{key:n,attrs:{disabled:e.disabled,label:e.label}})})),1),e._v(" "),l("br"),e._v("\n      ["+e._s(e.checkboxGroupDefaultValue.join())+"]\n    ")],1)])]],2)},n=[],l={data:function(){return{checkboxGroupInitValues:[{disabled:!1,label:"南瓜"},{disabled:!0,label:"西红柿"},{disabled:!1,label:"哈密瓜"},{disabled:!1,label:"水蜜桃"},{disabled:!0,label:"哈密瓜2"},{disabled:!1,label:"水蜜桃2"}],checkboxGroupDefaultValue:["南瓜","哈密瓜","水蜜桃","哈密瓜2"],indeterminate:!0,checkedAllModel:!1}},computed:{hasAllChecked:function(){var e=this;return this.checkboxGroupInitValues.every((function(n){return e.checkboxGroupDefaultValue.indexOf(n.label)>-1}))},hasPartChecked:function(){var e=this;return this.checkboxGroupInitValues.some((function(n){return e.checkboxGroupDefaultValue.indexOf(n.label)>-1}))},disabledChecked:function(){var e=this,n=[];return this.checkboxGroupInitValues.filter((function(l){l.disabled&&e.checkboxGroupDefaultValue.indexOf(l.label)>-1&&n.push(l.label)})),n},disabledUnChecked:function(){var e=this,n=[];return this.checkboxGroupInitValues.filter((function(l){l.disabled&&-1===e.checkboxGroupDefaultValue.indexOf(l.label)&&n.push(l.label)})),n}},methods:{checkAll:function(){var e=this,n=this.checkboxGroupInitValues.map((function(e){return e.label}));this.disabledUnChecked.length>0?(n=n.filter((function(n){return-1===e.disabledUnChecked.indexOf(n)})),this.indeterminate=!0,this.checkedAllModel=!1):(this.indeterminate=!1,this.checkedAllModel=!0),this.checkboxGroupDefaultValue=n},unCheckAll:function(){this.checkboxGroupDefaultValue=this.disabledChecked,this.disabledChecked.length>0?this.indeterminate=!0:this.indeterminate=!1,this.checkedAllModel=!1},handleCheckAll:function(){this.checkedAllModel?this.checkAll():this.unCheckAll()},handleCheckGroupChange:function(){console.log(1111),this.hasAllChecked?(this.checkedAllModel=!0,this.indeterminate=!1):this.hasPartChecked?this.indeterminate=!0:(this.indeterminate=!1,this.checkedAllModel=!1)}}};return D({render:e,staticRenderFns:n},l)}()}},P=y,M=Object(u["a"])(P,G,O,!1,null,null,null),w=M.exports,I=function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("section",{staticClass:"content example-md-doc"},[l("anchor",{attrs:{label:"API"}}),l("h3",[e._v("props")]),e._m(0),l("h3",[e._v("Event")]),e._m(1)],1)},S=[function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("table",{staticClass:"example-table"},[l("thead",[l("tr",[l("th",[e._v("参数")]),l("th",[e._v("说明")]),l("th",[e._v("类型")]),l("th",[e._v("可选值")]),l("th",[e._v("默认值")])])]),l("tbody",[l("tr",[l("td",[e._v("value")]),l("td",[l("code",[e._v("v-model")]),e._v("绑定的值")]),l("td",[l("code",[e._v("String|Number|Boolean")])]),l("td",[e._v("-")]),l("td",[e._v("-")])]),l("tr",[l("td",[e._v("label")]),l("td",[e._v("checkbox label")]),l("td",[l("code",[e._v("String")])]),l("td",[e._v("-")]),l("td",[e._v("-")])]),l("tr",[l("td",[e._v("disabled")]),l("td",[e._v("是否禁止选择")]),l("td",[l("code",[e._v("Boolean")])]),l("td",[e._v("-")]),l("td",[e._v("false")])]),l("tr",[l("td",[e._v("indeterminate")]),l("td",[e._v("是否是半选")]),l("td",[l("code",[e._v("Boolean")])]),l("td",[e._v("-")]),l("td",[e._v("false")])]),l("tr",[l("td",[e._v("isControlled")]),l("td",[e._v("是否为可控组件，配合 "),l("code",[e._v("isSelected")]),e._v(" 使用")]),l("td",[l("code",[e._v("Boolean")])]),l("td",[e._v("-")]),l("td",[e._v("false")])]),l("tr",[l("td",[e._v("isSelected")]),l("td",[e._v("是否选中。当 isControlled 为 true 时生效")]),l("td",[l("code",[e._v("Boolean")])]),l("td",[e._v("-")]),l("td",[e._v("false")])])])])},function(){var e=this,n=e.$createElement,l=e._self._c||n;return l("table",{staticClass:"example-table"},[l("thead",[l("tr",[l("th",[e._v("事件名称")]),l("th",[e._v("说明")]),l("th",[e._v("回调参数")])])]),l("tbody",[l("tr",[l("td",[e._v("on-checked-change")]),l("td",[e._v("选中改变时回调")]),l("td",[e._v("isChecked")])])])])}],E={},$=Object(u["a"])(E,I,S,!1,null,null,null),U=$.exports,B={components:{checkboxSingle:k,checkboxMultipleAdvanced:w,checkboxMultipleSimple:V,API:U}},F=B,R=Object(u["a"])(F,t,c,!1,null,null,null);n["default"]=R.exports}}]);
//# sourceMappingURL=chunk-2d23118b.e991e0ab.js.map