{"version":3,"sources":["views/home/table.jsx","views/home/checkbox.jsx","views/home/radio.jsx","views/home/button.jsx","views/home/collapse.jsx","views/home/index.jsx","serviceWorker.js","index.jsx"],"names":["columns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","record","size","name","data","age","address","Index","dataSource","pagination","React","Component","onChange","checkedValues","console","log","plainOptions","options","label","value","optionsWithDisabled","disabled","Group","defaultValue","state","e","target","setState","radioStyle","display","height","lineHeight","this","style","type","Panel","Collapse","callback","msgComp","defaultActiveKey","header","themes","themeName","selected","themeList","window","theme_switcher_cli_themeVars","item","themePath","themeSwitcherTool","SwitcherThemeTool","styleLinkId","useStorage","storageKey","Home","currentTheme","getCurrentTheme","changeTheme","slice","switcher","loadingFn","switchThemeLoding","completedFn","switchThemeCompleted","message","loading","setTimeout","className","theme","index","onClick","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2be12ff2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Tags',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: tags => (\r\n        <>\r\n          {tags.map(tag => {\r\n            let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            if (tag === 'loser') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Invite {record.name}</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n  const data = [\r\n    {\r\n      key: '1',\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n      tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n      tags: ['loser'],\r\n    },\r\n    {\r\n      key: '3',\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n      tags: ['cool', 'teacher'],\r\n    },\r\n  ];\r\n\r\nexport default class Index extends React.Component {\r\n    render() {\r\n        return (\r\n            <Table columns={columns} dataSource={data} pagination={false} />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Checkbox } from \"antd\";\r\n\r\nfunction onChange(checkedValues) {\r\n    console.log(\"checked = \", checkedValues);\r\n}\r\n\r\nconst plainOptions = [\"Apple\", \"Pear\", \"Orange\"];\r\nconst options = [\r\n    { label: \"Apple\", value: \"Apple\" },\r\n    { label: \"Pear\", value: \"Pear\" },\r\n    { label: \"Orange\", value: \"Orange\" },\r\n];\r\nconst optionsWithDisabled = [\r\n    { label: \"Apple\", value: \"Apple\" },\r\n    { label: \"Pear\", value: \"Pear\" },\r\n    { label: \"Orange\", value: \"Orange\", disabled: false },\r\n];\r\n\r\nexport default class Index extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Checkbox.Group\r\n                    options={plainOptions}\r\n                    defaultValue={[\"Apple\"]}\r\n                    onChange={onChange}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Checkbox.Group\r\n                    options={options}\r\n                    defaultValue={[\"Pear\"]}\r\n                    onChange={onChange}\r\n                />\r\n                <br />\r\n                <br />\r\n                <Checkbox.Group\r\n                    options={optionsWithDisabled}\r\n                    disabled\r\n                    defaultValue={[\"Apple\"]}\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Radio } from \"antd\";\r\n\r\nexport default class Index extends React.Component {\r\n    state = {\r\n        value: 1,\r\n    };\r\n\r\n    onChange = (e) => {\r\n        console.log(\"radio checked\", e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const radioStyle = {\r\n            display: \"block\",\r\n            height: \"30px\",\r\n            lineHeight: \"30px\",\r\n        };\r\n        const { value } = this.state;\r\n        return (\r\n            <Radio.Group onChange={this.onChange} value={value}>\r\n                <Radio style={radioStyle} value={1}>\r\n                    Option A\r\n                </Radio>\r\n                <Radio style={radioStyle} value={2}>\r\n                    Option B\r\n                </Radio>\r\n                <Radio style={radioStyle} value={3}>\r\n                    Option C\r\n                </Radio>\r\n                <Radio style={radioStyle} value={4}>\r\n                    Option C\r\n                </Radio>\r\n            </Radio.Group>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nexport default class Index extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button type=\"primary\">Primary</Button>\r\n                <Button>Default</Button>\r\n                <Button type=\"dashed\">Dashed</Button>\r\n                <Button type=\"link\">Link</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction callback(key) {\r\n    console.log(key);\r\n}\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nexport default class Index extends React.Component {\r\n    render() {\r\n        return (\r\n            <Collapse defaultActiveKey={[\"1\"]} onChange={callback}>\r\n                <Panel header=\"This is panel header 1\" key=\"1\">\r\n                    <p>{text}</p>\r\n                </Panel>\r\n                <Panel header=\"This is panel header 2\" key=\"2\">\r\n                    <p>{text}</p>\r\n                </Panel>\r\n                <Panel header=\"This is panel header 3\" key=\"3\" disabled>\r\n                    <p>{text}</p>\r\n                </Panel>\r\n            </Collapse>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { message } from \"antd\";\r\nimport Table from \"./table\";\r\nimport Checkbox from \"./checkbox\";\r\nimport Radio from \"./radio\";\r\nimport Button from \"./button\";\r\nimport Collapse from \"./collapse\";\r\nimport SwitcherThemeTool from \"theme-switcher-tool\";\r\n\r\nconst themes = [\r\n    {\r\n        themeName: \"theme-black\",\r\n        selected: false\r\n    },\r\n    {\r\n        themeName: \"theme-blue\",\r\n        selected: false\r\n    },\r\n    {\r\n        themeName: \"theme-orange\",\r\n        selected: false\r\n    },\r\n    {\r\n        themeName: \"theme-red\",\r\n        selected: false\r\n    }\r\n];\r\n\r\nconst themeList = window.theme_switcher_cli_themeVars.map(item => {\r\n    item.themeName = item.key;\r\n    item.themePath = item.themePath;\r\n    return item;\r\n});\r\n\r\nconst themeSwitcherTool = SwitcherThemeTool({\r\n    themeList: themeList,\r\n    styleLinkId: \"theme_switcher_cli_style_id\",\r\n    useStorage: true,\r\n    storageKey: \"theme_switcher_cli_theme\"\r\n});\r\n\r\nlet msgComp;\r\n\r\nexport default class Home extends React.Component {\r\n    state = {\r\n        themes: themes\r\n    };\r\n\r\n    componentDidMount() {\r\n        // set default theme\r\n        const currentTheme = themeSwitcherTool.getCurrentTheme();\r\n        if (currentTheme) {\r\n            this.changeTheme(currentTheme);\r\n        }\r\n    }\r\n\r\n    // change theme\r\n    changeTheme(themeName) {\r\n        this.setState({\r\n            themes: this.state.themes.slice().map(item => {\r\n                item.selected = themeName === item.themeName;\r\n                return item;\r\n            })\r\n        });\r\n\r\n        themeSwitcherTool.switcher({\r\n            themeName: themeName,\r\n            loadingFn: this.switchThemeLoding,\r\n            completedFn: this.switchThemeCompleted\r\n        });\r\n    }\r\n\r\n    // switch Theme Loding\r\n    switchThemeLoding() {\r\n        msgComp = message.loading(\"theme loading...\");\r\n    }\r\n\r\n    // switch Theme Completed\r\n    switchThemeCompleted() {\r\n        setTimeout(msgComp);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"home-top-bar\">\r\n                    <div className=\"title\">\r\n                        theme-switcher-cli React Ant.Design UI Example\r\n                    </div>\r\n                    <div className=\"switch-theme-tool\">\r\n                        {this.state.themes.map((theme, index) => {\r\n                            return (\r\n                                <span\r\n                                    key={index}\r\n                                    onClick={() =>\r\n                                        this.changeTheme(theme.themeName)\r\n                                    }\r\n                                    className={`${theme.themeName} color-item`}\r\n                                >\r\n                                    {theme.selected && (\r\n                                        <i className=\"iconfont icon-check\" />\r\n                                    )}\r\n                                </span>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-content\">\r\n                    <div className=\"content-item\">\r\n                        <div className=\"content-item-block\">\r\n                            <span className=\"icon\" />\r\n                            <span className=\"title\">Table</span>\r\n                        </div>\r\n                        <Table />\r\n                    </div>\r\n                    <div className=\"content-item\">\r\n                        <div className=\"content-item-block\">\r\n                            <span className=\"icon\" />\r\n                            <span className=\"title\">Checkbox</span>\r\n                        </div>\r\n                        <Checkbox />\r\n                    </div>\r\n                    <div className=\"content-item\">\r\n                        <div className=\"content-item-block\">\r\n                            <span className=\"icon\" />\r\n                            <span className=\"title\">Radio</span>\r\n                        </div>\r\n                        <Radio />\r\n                    </div>\r\n                    <div className=\"content-item\">\r\n                        <div className=\"content-item-block\">\r\n                            <span className=\"icon\" />\r\n                            <span className=\"title\">Button</span>\r\n                        </div>\r\n                        <Button />\r\n                    </div>\r\n                    <div className=\"content-item\">\r\n                        <div className=\"content-item-block\">\r\n                            <span className=\"icon\" />\r\n                            <span className=\"title\">Collapse</span>\r\n                        </div>\r\n                        <Collapse />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Home from \"./views/home/index.jsx\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Home />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}